---
# Install the packages for rpm based OS

- name: Print install welcome msg
  debug:
     msg: "Installing for rpm based platforms ..."


#
# Install or update RPMs
#
- block:  ## when: not scale_daemon_running
    - name: install | List installed GPFS RPMs
      yum:
        list: gpfs.base
        disablerepo: spectrum-scale-gpfs
      register: scale_install_rpmlist
      when: ansible_pkg_mgr == 'yum'

    - name: install | Install GPFS RPMs
      yum:
        name: "{{ scale_install_all_rpms }}"
        state: present
      register: scale_install_rpmresult
      when: ansible_pkg_mgr == 'yum'

    - name: install | Install GPFS License RPMs
      yum:
        name: "{{ scale_install_license_pkgs }}"
        state: present
      register: scale_install_license_rpmresult
      when: ansible_pkg_mgr == 'yum'

    - name: install | List installed GPFS RPMs
      dnf:
        list: gpfs.base
        disablerepo: spectrum-scale-gpfs
      register: scale_install_dnfrpmlist
      when: ansible_pkg_mgr == 'dnf'

    - name: install | Install GPFS RPMs
      dnf:
        name: "{{ scale_install_all_rpms }}"
        state: present
      register: scale_install_dnfrpmresult
      when: ansible_pkg_mgr == 'dnf'

    - name: install | Install GPFS License RPMs
      dnf:
        name: "{{ scale_install_license_rpms }}"
        state: present
      register: scale_install_license_dnfrpmresult
      when: ansible_pkg_mgr == 'dnf'

    - name: install | Check if GPFS RPMs were updated
      set_fact:
        scale_install_updated: true
      when:
        - ("'installed' in scale_install_rpmlist.results | map(attribute='yumstate') | list") or
          ("'installed' in scale_install_dnfrpmlist.results | map(attribute='yumstate' | list")
        - (scale_install_rpmresult.changed) or (scale_install_dnfrpmresult.changed)
        #- (scale_install_license_rpmresult.changed) or (scale_install_license_dnfrpmresult.changed)
  when: not scale_daemon_running
