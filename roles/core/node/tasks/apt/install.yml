---
# Install the packages for apt based OS

- name: apt/install | Install dependency packages from the OS repository
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - local-apt-repository
    - software-properties-common
    - reprepro
    - dpkg-dev
    # GPFS.base dependencies
    - ksh
    - gawk
    - iputils-ping
    - libaio1
    - python
    - m4

- name: apt/install | Initialize local list
  set_fact:
    local_all_pkgs: []

- name: apt/install - Build up a package list based on the basename
  set_fact:
    local_all_pkgs: "{{ local_all_pkgs }} + [ '{{ item | basename }}' ]"
  with_items:
    - "{{ scale_install_all_pkgs }}"

- name: Touch the local apt config file, so that it exists
  file:
    path: "/etc/apt/sources.list.d/gpfs.local.list"
    state: touch

- name: Create a local apt config file
  blockinfile:
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: "deb file:{{ scale_install_gpfs_pkgdir_name  }}/ ./"
    dest: "/etc/apt/sources.list.d/gpfs.local.list"


#
# Install or update GPFS packages
#
- name: Install the GPFS packages
  block:
    - name: install the packages
      apt:
        name: "{{ local_all_pkgs }}"
        state: present
      register: scale_install_result

    # # VKHU_DEBUG - HACK
    # - name: install the packages one by one (hack)
    #   shell: "dpkg -i {{ item }}"
    #   args:
    #     chdir: "{{ scale_install_gpfs_pkgdir_name }}"
    #   with_items:
    #     - "{{ local_all_pkgs }}"
    #   register: scale_install_result

    - name: install | Check if GPFS packages were updated
      set_fact:
        scale_install_updated: true
      when:
        - (scale_install_result.changed)
  when: not scale_daemon_running
